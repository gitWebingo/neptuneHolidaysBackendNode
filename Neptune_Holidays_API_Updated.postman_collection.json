{
  "info": {
    "_postman_id": "7f85698b-c548-48c0-9e4b-b35a24b3c5d8",
    "name": "Neptune Holidays API",
    "description": "Complete API collection for Neptune Holidays backend system with appropriate permission structures.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "12345678"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "User Authentication",
          "item": [
            {
              "name": "Register User",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"securePassword123\",\n    \"phone\": \"+1234567890\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "register"
                  ]
                },
                "description": "Register a new user"
              }
            },
            {
              "name": "Login User",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "if (jsonData.token) {",
                      "    pm.environment.set(\"userToken\", jsonData.token);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"john@example.com\",\n    \"password\": \"securePassword123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "login"
                  ]
                },
                "description": "Login a user and get JWT token"
              }
            },
            {
              "name": "Get Current User",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/me",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "me"
                  ]
                },
                "description": "Get the currently logged in user's information"
              }
            },
            {
              "name": "Logout",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/logout",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "logout"
                  ]
                },
                "description": "Logout current user and invalidate the token"
              }
            }
          ],
          "description": "User authentication endpoints"
        },
        {
          "name": "Admin Authentication",
          "item": [
            {
              "name": "Login Admin",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "if (jsonData.token) {",
                      "    pm.environment.set(\"adminToken\", jsonData.token);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@neptuneholidays.com\",\n    \"password\": \"adminSecurePassword\",\n    \"forceLogin\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/admin/auth/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "auth",
                    "login"
                  ]
                },
                "description": "Login as admin and get admin JWT token. The forceLogin parameter can be set to true to force logout existing sessions."
              }
            },
            {
              "name": "Get Current Admin",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/auth/me",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "auth",
                    "me"
                  ]
                },
                "description": "Get the currently logged in admin's information"
              }
            },
            {
              "name": "Admin Logout",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/auth/logout",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "auth",
                    "logout"
                  ]
                },
                "description": "Logout current admin and invalidate the token"
              }
            }
          ],
          "description": "Admin authentication endpoints"
        }
      ],
      "description": "Authentication endpoints for users and admins"
    },
    {
      "name": "Admin Management",
      "item": [
        {
          "name": "Get All Admins",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users?page=1&limit=10&search=&roleId=&isActive=true",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": ""
                },
                {
                  "key": "roleId",
                  "value": ""
                },
                {
                  "key": "isActive",
                  "value": "true"
                }
              ]
            },
            "description": "Get all admin users with pagination and optional filtering (Requires 'admin:view' permission)"
          }
        },
        {
          "name": "Get Admin by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "admin_id_here",
                  "description": "The UUID of the admin to retrieve"
                }
              ]
            },
            "description": "Get a specific admin by ID (Requires 'admin:view' permission)"
          }
        },
        {
          "name": "Create Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith\",\n    \"email\": \"jane@neptuneholidays.com\",\n    \"password\": \"secureAdminPass123\",\n    \"roleId\": \"role_id_here\",\n    \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "users"
              ]
            },
            "description": "Create a new admin user (Requires 'admin:manage' permission)"
          }
        },
        {
          "name": "Update Admin",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith-Updated\",\n    \"email\": \"jane.updated@neptuneholidays.com\",\n    \"roleId\": \"role_id_here\",\n    \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "admin_id_here",
                  "description": "The UUID of the admin to update"
                }
              ]
            },
            "description": "Update an admin's information (Requires 'admin:manage' permission)"
          }
        },
        {
          "name": "Update Admin Password",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"currentPassword\": \"oldPassword123\",\n    \"newPassword\": \"newSecurePassword456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/:id/password",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "users",
                ":id",
                "password"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "admin_id_here",
                  "description": "The UUID of the admin whose password is being updated"
                }
              ]
            },
            "description": "Update an admin's password (Requires 'admin:manage' permission or must be the admin's own account)"
          }
        },
        {
          "name": "Delete Admin",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "admin_id_here",
                  "description": "The UUID of the admin to delete"
                }
              ]
            },
            "description": "Delete an admin (Requires 'admin:delete' permission - separated from 'admin:manage' for security)"
          }
        }
      ],
      "description": "Endpoints for managing admin users - with strict permission controls"
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users?page=1&limit=10&search=&isActive=true",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": ""
                },
                {
                  "key": "isActive",
                  "value": "true"
                }
              ]
            },
            "description": "Get all users with pagination and filtering (Requires 'user:view' permission)"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "user_id_here",
                  "description": "The UUID of the user to retrieve"
                }
              ]
            },
            "description": "Get a specific user by ID (Requires 'user:view' permission)"
          }
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"Robert\",\n    \"lastName\": \"Johnson\",\n    \"email\": \"robert@example.com\",\n    \"password\": \"secureUserPass123\",\n    \"phone\": \"+1987654321\",\n    \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users"
              ]
            },
            "description": "Create a new user (Requires 'user:manage' permission)"
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"Robert\",\n    \"lastName\": \"Johnson-Updated\",\n    \"email\": \"robert.updated@example.com\",\n    \"phone\": \"+1987654322\",\n    \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "user_id_here",
                  "description": "The UUID of the user to update"
                }
              ]
            },
            "description": "Update a user's information (Requires 'user:manage' permission)"
          }
        },
        {
          "name": "Update User Password",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"newPassword\": \"newSecurePassword456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/:id/password",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                ":id",
                "password"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "user_id_here",
                  "description": "The UUID of the user whose password is being updated"
                }
              ]
            },
            "description": "Update a user's password (Requires 'user:manage' permission)"
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "user_id_here",
                  "description": "The UUID of the user to delete"
                }
              ]
            },
            "description": "Delete a user (Requires 'user:delete' permission - separated from 'user:manage' for security)"
          }
        }
      ],
      "description": "Endpoints for managing users - each with appropriate permissions"
    },
    {
      "name": "Role Management",
      "item": [
        {
          "name": "Get All Roles",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/roles",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "roles"
              ]
            },
            "description": "Get all available roles (Requires 'role:view' permission)"
          }
        },
        {
          "name": "Get Role by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/roles/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "roles",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "role_id_here",
                  "description": "The UUID of the role to retrieve"
                }
              ]
            },
            "description": "Get a specific role by ID (Requires 'role:view' permission)"
          }
        },
        {
          "name": "Create Role",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"marketing\",\n    \"description\": \"Marketing team with limited access\",\n    \"permissions\": [\"user:view\", \"reports:view\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/roles",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "roles"
              ]
            },
            "description": "Create a new role (Requires 'role:manage' permission)"
          }
        },
        {
          "name": "Update Role",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"marketing\",\n    \"description\": \"Updated description for marketing role\",\n    \"permissions\": [\"user:view\", \"reports:view\", \"settings:view\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/roles/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "roles",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "role_id_here",
                  "description": "The UUID of the role to update"
                }
              ]
            },
            "description": "Update an existing role (Requires 'role:manage' permission)"
          }
        },
        {
          "name": "Delete Role",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/roles/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "roles",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "role_id_here",
                  "description": "The UUID of the role to delete"
                }
              ]
            },
            "description": "Delete a role (Requires 'role:delete' permission - separated from 'role:manage' for security)"
          }
        }
      ],
      "description": "Endpoints for managing roles within the system"
    },
    {
      "name": "Permission Management",
      "item": [
        {
          "name": "Get All Permissions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/permissions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "permissions"
              ]
            },
            "description": "Get all system permissions (Requires 'permission:view' permission)"
          }
        },
        {
          "name": "Get Permission by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/permissions/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "permissions",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "permission_id_here",
                  "description": "The UUID of the permission to retrieve"
                }
              ]
            },
            "description": "Get a specific permission by ID (Requires 'permission:view' permission)"
          }
        },
        {
          "name": "Get Permissions by Module",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/permissions/module/:module",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "permissions",
                "module",
                ":module"
              ],
              "variable": [
                {
                  "key": "module",
                  "value": "Users",
                  "description": "The module to get permissions for"
                }
              ]
            },
            "description": "Get all permissions for a specific module (Requires 'permission:view' permission)"
          }
        },
        {
          "name": "Get Role Permissions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/roles/:id/permissions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "roles",
                ":id",
                "permissions"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "role_id_here",
                  "description": "The UUID of the role to get permissions for"
                }
              ]
            },
            "description": "Get permissions for a specific role (Requires 'role:view' permission)"
          }
        },
        {
          "name": "Update Role Permissions",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"permissions\": [\"user:view\", \"user:manage\", \"reports:view\", \"settings:view\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/roles/:id/permissions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "roles",
                ":id",
                "permissions"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "role_id_here",
                  "description": "The UUID of the role to update permissions for"
                }
              ]
            },
            "description": "Update permissions for a role (Requires 'permission:assign' permission)"
          }
        }
      ],
      "description": "Endpoints for managing permissions within the system"
    },
    {
      "name": "Settings Management",
      "item": [
        {
          "name": "Get All Settings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/settings",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "settings"
              ]
            },
            "description": "Get all system settings (Requires 'settings:view' permission)"
          }
        },
        {
          "name": "Get Setting by Key",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/settings/:key",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "settings",
                ":key"
              ],
              "variable": [
                {
                  "key": "key",
                  "value": "site_name",
                  "description": "The key of the setting to retrieve"
                }
              ]
            },
            "description": "Get a specific setting by key (Requires 'settings:view' permission)"
          }
        },
        {
          "name": "Update Setting",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"value\": \"Neptune Holidays\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/settings/:key",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "settings",
                ":key"
              ],
              "variable": [
                {
                  "key": "key",
                  "value": "site_name",
                  "description": "The key of the setting to update"
                }
              ]
            },
            "description": "Update a system setting (Requires 'settings:manage' permission)"
          }
        }
      ],
      "description": "Endpoints for managing system settings"
    },
    {
      "name": "Audit Logs",
      "item": [
        {
          "name": "Get All Audit Logs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/audit?page=1&limit=20&startDate=&endDate=&action=&entityType=&adminId=",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "audit"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "startDate",
                  "value": ""
                },
                {
                  "key": "endDate",
                  "value": ""
                },
                {
                  "key": "action",
                  "value": ""
                },
                {
                  "key": "entityType",
                  "value": ""
                },
                {
                  "key": "adminId",
                  "value": ""
                }
              ]
            },
            "description": "Get all audit logs with filtering (Requires 'audit:view' permission)"
          }
        },
        {
          "name": "Get Audit Log by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/audit/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "audit",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "log_id_here",
                  "description": "The UUID of the audit log to retrieve"
                }
              ]
            },
            "description": "Get a specific audit log by ID (Requires 'audit:view' permission)"
          }
        },
        {
          "name": "Get Admin Activity",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/audit/admin/:adminId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "audit",
                "admin",
                ":adminId"
              ],
              "variable": [
                {
                  "key": "adminId",
                  "value": "admin_id_here",
                  "description": "The UUID of the admin to get activity for"
                }
              ]
            },
            "description": "Get all activities of a specific admin (Requires 'audit:view' permission)"
          }
        }
      ],
      "description": "Endpoints for accessing and managing audit logs"
    },
    {
      "name": "Reports",
      "item": [
        {
          "name": "Get Available Reports",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/reports",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "reports"
              ]
            },
            "description": "Get a list of all available reports (Requires 'reports:view' permission)"
          }
        },
        {
          "name": "User Activity Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/reports/user-activity?startDate=2023-01-01&endDate=2023-12-31&format=json",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "reports",
                "user-activity"
              ],
              "query": [
                {
                  "key": "startDate",
                  "value": "2023-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2023-12-31"
                },
                {
                  "key": "format",
                  "value": "json",
                  "description": "Response format (json, csv, pdf)"
                }
              ]
            },
            "description": "Get report of user activity (Requires 'reports:view' permission)"
          }
        },
        {
          "name": "Admin Activity Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/reports/admin-activity?startDate=2023-01-01&endDate=2023-12-31&format=json",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "reports",
                "admin-activity"
              ],
              "query": [
                {
                  "key": "startDate",
                  "value": "2023-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2023-12-31"
                },
                {
                  "key": "format",
                  "value": "json",
                  "description": "Response format (json, csv, pdf)"
                }
              ]
            },
            "description": "Get report of admin activity (Requires 'reports:view' permission)"
          }
        }
      ],
      "description": "Endpoints for generating and accessing system reports"
    },
    {
      "name": "Session Management",
      "item": [
        {
          "name": "Get User Sessions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/sessions/user/:userId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "sessions",
                "user",
                ":userId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "user_id_here",
                  "description": "The UUID of the user"
                }
              ]
            },
            "description": "Get all active sessions for a user (Requires 'sessions:view' permission)"
          }
        },
        {
          "name": "Get Admin Sessions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/sessions/admin/:adminId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "sessions",
                "admin",
                ":adminId"
              ],
              "variable": [
                {
                  "key": "adminId",
                  "value": "admin_id_here",
                  "description": "The UUID of the admin"
                }
              ]
            },
            "description": "Get all active sessions for an admin (Requires 'sessions:view' permission)"
          }
        },
        {
          "name": "Revoke User Session",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/sessions/user/:userId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "sessions",
                "user",
                ":userId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "user_id_here",
                  "description": "The UUID of the user"
                }
              ]
            },
            "description": "Revoke all sessions for a user (Requires 'sessions:manage' permission)"
          }
        },
        {
          "name": "Revoke Admin Session",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/sessions/admin/:adminId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "sessions",
                "admin",
                ":adminId"
              ],
              "variable": [
                {
                  "key": "adminId",
                  "value": "admin_id_here",
                  "description": "The UUID of the admin"
                }
              ]
            },
            "description": "Revoke all sessions for an admin (Requires 'sessions:manage' permission and superadmin role for other superadmins)"
          }
        }
      ],
      "description": "Endpoints for managing user and admin sessions"
    },
    {
      "name": "Utilities",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "health"
              ]
            },
            "description": "Check the health status of the API (Public endpoint)"
          }
        },
        {
          "name": "Redis Health",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/health/redis",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "health",
                "redis"
              ]
            },
            "description": "Check the health of Redis connection (Requires admin authentication)"
          }
        },
        {
          "name": "Database Health",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/health/database",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "health",
                "database"
              ]
            },
            "description": "Check the health of database connection (Requires admin authentication)"
          }
        },
        {
          "name": "Generate JWT Secret",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/utils/generate-jwt-secret",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "utils",
                "generate-jwt-secret"
              ]
            },
            "description": "Manually trigger JWT secret generation if empty (Requires superadmin role)"
          }
        }
      ],
      "description": "Utility endpoints for system maintenance and health checks"
    },
    {
      "name": "Documentation",
      "item": [
        {
          "name": "API Documentation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api-docs",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api-docs"
              ]
            },
            "description": "Access the Swagger/OpenAPI documentation"
          }
        }
      ],
      "description": "Documentation endpoints"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "userToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    }
  ]
} 